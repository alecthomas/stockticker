// Code generated by FTL. DO NOT EDIT.
package pricedb

import (
    "context"
    "github.com/alecthomas/types/tuple"
    "github.com/block/ftl/common/reflection"
    "github.com/block/ftl/go-runtime/server"
    stdtime "time"
)

type InsertPriceQuery struct {
  	Code string
  	Price float64
  	Timestamp stdtime.Time
  	Currency string
}
type LoadPricesResult struct {
  	Code string
  	Price float64
  	Timestamp stdtime.Time
  	Currency string
}
	
type InsertPriceClient func(context.Context, InsertPriceQuery) error
	
type LoadPricesClient func(context.Context) ([]LoadPricesResult, error)

func init() {
	reflection.Register(
		server.QuerySink[InsertPriceQuery]("pricedb", "insertPrice", reflection.CommandTypeExec, "prices", "INSERT INTO prices (code, price, timestamp, currency) VALUES (?, ?, ?, ?)", []string{"Code","Price","Timestamp","Currency"}, []tuple.Pair[string,string]{}),
		server.QuerySource[LoadPricesResult]("pricedb", "loadPrices", reflection.CommandTypeMany, "prices", "SELECT code, price, timestamp, currency FROM prices ORDER BY timestamp DESC", []string{}, []tuple.Pair[string,string]{tuple.PairOf("code", "Code"),tuple.PairOf("price", "Price"),tuple.PairOf("timestamp", "Timestamp"),tuple.PairOf("currency", "Currency")}),
	)
}